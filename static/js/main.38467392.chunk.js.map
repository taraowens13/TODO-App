{"version":3,"sources":["logo.svg","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["todoList","id","completed","description","Todo","props","completeItem","itemId","setState","prevState","prevList","itemIndex","findIndex","item","console","log","handleKeyPress","event","key","addTodoItem","prevValue","state","inputRef","current","value","curId","React","createRef","checkRef","filterRef","length","filtered","this","filter","map","ref","type","onChange","defaultChecked","undefined","style","textDecoration","e","prev","padding","onKeyPress","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAAe,I,sDCCXA,EAAW,CACX,CACGC,GAAI,EACJC,WAAW,EACXC,YAAa,sBAEhB,CACGF,GAAI,EACJC,WAAW,EACXC,YAAa,uBAgBEC,E,kDAClB,WAAYC,GAAQ,IAAD,uBAChB,cAAMA,IAaTC,aAAe,SAACC,GACd,EAAKC,UAAS,SAACC,GACZ,IAAIC,EAAWD,EAAUT,SACrBW,EAAYD,EAASE,WAAU,SAACC,GAAD,OAAUA,EAAKZ,IAAMM,KAMxD,OALAO,QAAQC,IAAIL,EAASC,GAAWT,WAChCQ,EAASC,GAAT,2BACMD,EAASC,IADf,IAEGT,WAAYQ,EAASC,GAAWT,YAE5B,CAAEF,SAAS,YAAKU,QAvBT,EA2BnBM,eAAiB,SAACC,GACfH,QAAQC,IAAI,WACZD,QAAQC,IAAIE,EAAMC,KACA,UAAdD,EAAMC,KACP,EAAKC,eA/BQ,EAkCnBA,YAAc,WACX,IAAIC,EAAY,EAAKC,MAAMC,SAASC,QAAQC,MAC5C,EAAKhB,UAAS,SAAAC,GAAS,MAAK,CACzBT,SAAS,GAAD,mBAAMS,EAAUT,UAAhB,CACL,CAAEE,WAAW,EAAOC,YAAaiB,EAAWnB,GAAIQ,EAAUgB,SAC7DA,MAAMhB,EAAUgB,MAAM,MAEzB,EAAKJ,MAAMC,SAASC,QAAQC,MAAQ,IAvCpC,IAAIF,EAAWI,IAAMC,YACjBC,EAAWF,IAAMC,YACjBE,EAAYH,IAAMC,YAJN,OAKhB,EAAKN,MAAQ,CACVrB,WACAyB,MAAMzB,EAAS8B,OAAO,EACtBR,WACAM,WACAG,UAAS,EACTF,aAXa,E,0CA2CtB,WAAU,IAAD,OACF7B,EAAWgC,KAAKX,MAAMrB,SAa1B,OAZGgC,KAAKX,MAAMU,WACX/B,EAAWA,EAASiC,QAAO,SAAApB,GAAI,OAAKA,EAAKX,cAEzCF,EAAWA,EAASkC,KAAI,SAACrB,GAAD,OACxB,8BACG,kCACM,uBAAOsB,IAAK,EAAKd,MAAMO,SAAUQ,KAAK,WAAWC,SAAU,kBAAM,EAAK/B,aAAaO,EAAKZ,KAAKqC,eAAiBzB,EAAKX,UAAY,oBAAiBqC,IAChJ,sBAAMC,MAAO3B,EAAKX,UAAY,CAACuC,eAAgB,qBAAkBF,EAAjE,SAA6E1B,EAAKV,kBAHjFU,EAAKZ,OAQT,mCACT,sBAAKA,GAAG,WAAR,UACG,+CACG,kCACG,uBAAOkC,IAAKH,KAAKX,MAAMQ,UAAW5B,GAAG,WAAWmC,KAAK,WACrDC,SAAU,SAACK,GAAD,OAAO,EAAKlC,UAAS,SAACmC,GAAD,MAAW,CAAEZ,UAAW,EAAKV,MAAMU,cAClEO,gBAAiB,IAHpB,4BAMA,uBACH,qBAAKE,MAAO,CAACI,QAAQ,OAArB,SACI5C,IAEJ,uBACA,uBAAO6C,WAAY,SAAC5B,GAAD,OAAW,EAAKD,eAAeC,IAAQkB,IAAKH,KAAKX,MAAMC,WAC1E,wBAAQwB,QAAS,kBAAM,EAAK3B,eAA5B,iC,GAzE4BO,IAAMqB,WChB1BC,MANf,WACE,OACI,cAAC,EAAD,KCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.38467392.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nlet todoList = [\n    {\n       id: 1,\n       completed: true,\n       description: \"Complete this task\"\n    },\n    {\n       id: 2,\n       completed: true,\n       description: \"Complete this task\"\n    }\n ]\n  /*completeItem = (itemId) => {\n   this.setState((prevState) => {\n      let prevList = prevState.todoList\n      let itemIndex = prevList.findIndex((item) => item.id == itemId)\n      console.log(prevList[itemIndex].completed)\n      prevList[itemIndex] = {\n         ...prevList[ItemIndex],\n         completed: !prevList[itemIndex].completed,\n      }\n      return { todoList: [...prevList] }\n   })\n}*/\n \n export default class Todo extends React.Component {\n    constructor(props) {\n       super(props)\n       let inputRef = React.createRef()\n       let checkRef = React.createRef()\n       let filterRef = React.createRef()\n       this.state = {\n          todoList,\n          curId:todoList.length+1,\n          inputRef,\n          checkRef,\n          filtered:false,\n          filterRef\n         }\n    }\n    completeItem = (itemId) => {\n      this.setState((prevState) => {\n         let prevList = prevState.todoList\n         let itemIndex = prevList.findIndex((item) => item.id == itemId)\n         console.log(prevList[itemIndex].completed)\n         prevList[itemIndex] = {\n            ...prevList[itemIndex],\n            completed: !prevList[itemIndex].completed,\n         }\n         return { todoList: [...prevList] }\n      })\n   }\n\n    handleKeyPress = (event) => {\n       console.log(\"Pressed\")\n       console.log(event.key)\n       if (event.key === \"Enter\") {\n          this.addTodoItem()\n       }\n    }\n    addTodoItem = () => {\n       let prevValue = this.state.inputRef.current.value\n       this.setState(prevState => ({\n          todoList: [...prevState.todoList,\n             { completed: false, description: prevValue, id: prevState.curId }],\n          curId:prevState.curId+1\n       }))\n       this.state.inputRef.current.value = \"\"\n    }\n render() {\n    let todoList = this.state.todoList\n    if(this.state.filtered) {\n       todoList = todoList.filter(item => !item.completed)\n    }\n       todoList = todoList.map((item) => (\n       <div key={item.id}>\n          <label>\n                <input ref={this.state.checkRef} type=\"checkbox\" onChange={() => this.completeItem(item.id)} defaultChecked= {item.completed ? \"checked=true\" : undefined}></input>\n                <span style={item.completed ? {textDecoration: \"line-through\"} : undefined}>{item.description}</span>\n          </label>\n       </div>\n       ))\n \n    return ( <>\n    <div id=\"task-box\">\n       <h1>Today's tasks</h1>\n          <label>\n             <input ref={this.state.filterRef} id=\"checkbox\" type=\"checkbox\"\n             onChange={(e) => this.setState((prev) => ({ filtered: !this.state.filtered }))}\n             defaultChecked= {false}></input>\n          Remove completed tasks\n          </label>\n          <hr></hr>\n       <div style={{padding:\"5px\"}}>   \n          {todoList}\n       </div>\n       <br></br>\n       <input onKeyPress={(event) => this.handleKeyPress(event)} ref={this.state.inputRef} ></input>\n       <button onClick={() => this.addTodoItem()}>Add a task</button>\n       </div>\n    </>\n )\n }\n }","import logo from './logo.svg';\nimport './App.css';\nimport Todo from './Todo.js';\n\nfunction App() {\n  return (\n      <Todo></Todo>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}